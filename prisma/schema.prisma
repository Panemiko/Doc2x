// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model User {
    id             String          @id @unique @default(cuid())
    createdAt      DateTime        @default(now())
    updatedAt      DateTime        @default(now()) @updatedAt
    name           String
    email          String          @unique
    emailVerified  Boolean
    sessions       Session[]
    accounts       Account[]
    project        Project[]
    collaborations Collaboration[]

    @@map("users")
}

model Account {
    id             String   @id @unique @default(cuid())
    createdAt      DateTime @default(now())
    providerId     String
    providerUserId String
    user           User     @relation(fields: [userId], references: [id])
    userId         String

    @@map("accounts")
}

model Session {
    id        String   @id @unique @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
    user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
    expiresAt DateTime
    userId    String

    @@map("sessions")
}

model Project {
    id             String          @id @unique @default(cuid())
    createdAt      DateTime        @default(now())
    updatedAt      DateTime        @default(now()) @updatedAt
    owner          User            @relation(fields: [ownerId], references: [id])
    ownerId        String
    title          String
    abstract       String?
    collaborations Collaboration[]
    sections       Section[]

    @@map("projects")
}

model Section {
    id        String   @id @unique @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
    project   Project  @relation(fields: [projectId], references: [id])
    projectId String
    title     String
    content   String

    @@map("sections")
}

model Collaboration {
    id        String   @id @unique @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    project   Project  @relation(fields: [projectId], references: [id])
    projectId String

    @@map("collaborations")
}
